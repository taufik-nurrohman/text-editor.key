extends _index.pug

block state
  - const scripts = ['../text-editor/index.min.js', 'index.min.js']
  - const styles = ['../layout/index.min.css']
  - const theme = '#000'
  - const title = 'Key ' + version

block script
  script
    | const editor = new TextEditor(document.querySelector('textarea'), {
    |     with: [TextEditor.Key]
    | });
    |
    | editor.command('bold', function () {
    |     return this.wrap('<b>', '</b>'), false;
    | });
    |
    | editor.key('Control-b', 'bold');
    |
    | editor.key('Control-i', function () {
    |     return this.wrap('<i>', '</i>'), false;
    | });

block style
  style
    | @media (min-width: 45rem) {
    |   :root {
    |     padding-bottom: 3rem;
    |     padding-top: 3rem;
    |   }
    |   body > * {
    |     margin-left: auto;
    |     margin-right: auto;
    |     max-width: 45rem;
    |   }
    | }

block content
  header
    h1= title
    p Key extension for #[a(href='../text-editor/index.html') Text Editor].
    hr
    p Provides a feature to easily interact with the keyboard keys.
  main
    p
      textarea(spellcheck='false' style={
        'display': 'block',
        'width': '100%'
      }) abcdef
    p(role='note') Try to press #[kbd Control-b] or #[kbd Control-i] in the text area above!
    h2 Usage
    h4 Browser
    pre: code
      | &lt;script src="#[a(href='../text-editor/index.min.js' target='_blank') ./text-editor/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script src="#[a(href='index.min.js' target='_blank') ./text-editor.key/index.min.js]"&gt;&lt;/script&gt;
      | &lt;script&gt;
      |
      |   const editor = new TextEditor(document.querySelector('textarea'), {
      |       with: [TextEditor.Key]
      |   });
      |
      |   editor.command('bold', function () {
      |       return this.wrap('&lt;b&gt;', '&lt;/b&gt;'), false;
      |   });
      |
      |   editor.key('Control-b', 'bold');
      |
      |   editor.key('Control-i', function () {
      |       return this.wrap('&lt;i&gt;', '&lt;/i&gt;'), false;
      |   });
      |
      | &lt;/script&gt;
    h4 CommonJS
    pre: code
      | const TextEditor = require('@taufik-nurrohman/text-editor').default;
      | const TextEditorKey = require('@taufik-nurrohman/text-editor.key').default;
      |
      | TextEditor.state.with.push(TextEditorKey); // Load as a core extension
      |
      | const editor = new TextEditor(document.querySelector('textarea'), {
      |     with: [TextEditorKey] // Load as an optional extension
      | });
      |
      | editor.command('bold', function () {
      |     return this.wrap('&lt;b&gt;', '&lt;/b&gt;'), false;
      | });
      |
      | editor.key('Control-b', 'bold');
      |
      | editor.key('Control-i', function () {
      |     return this.wrap('&lt;i&gt;', '&lt;/i&gt;'), false;
      | });
    h4 ECMAScript
    pre: code
      | import TextEditor from '@taufik-nurrohman/text-editor';
      | import TextEditorKey from '@taufik-nurrohman/text-editor.key';
      |
      | TextEditor.state.with.push(TextEditorKey); // Load as a core extension
      |
      | const editor = new TextEditor(document.querySelector('textarea'), {
      |     with: [TextEditorKey] // Load as an optional extension
      | });
      |
      | editor.command('bold', function () {
      |     return this.wrap('&lt;b&gt;', '&lt;/b&gt;'), false;
      | });
      |
      | editor.key('Control-b', 'bold');
      |
      | editor.key('Control-i', function () {
      |     return this.wrap('&lt;i&gt;', '&lt;/i&gt;'), false;
      | });
    h2 Examples
    p TODO
    h2 Methods and Properties
    h3: code editor.command(command, of)
    p TODO
    h3: code editor.commands
    p TODO
    h3: code editor.key(key, of)
    p TODO
    h3: code editor.keys
    p TODO
  footer
    hr
    p
      != '&copy; ' + year + ' '
      a(href='/') Taufik Nurrohman